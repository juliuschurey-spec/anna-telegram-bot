from flask import Flask, request
import openai
import os

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Flask-–¥–æ–¥–∞—Ç–∫—É
app = Flask(__name__)

# üîê –ó–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π Telegram Bot Token
BOT_TOKEN = '8358163478:AAHX9kU_cY5M63uhspLlYNc6Ho0_CPE3h98'

# üîê –ó–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π OpenAI API –∫–ª—é—á (–∫—Ä–∞—â–µ —á–µ—Ä–µ–∑ env-–ø–µ—Ä–µ–º—ñ–Ω–Ω—É)
openai.api_key = os.environ.get("OPENAI_API_KEY") or "sk-..."

# –ì–æ–ª–æ–≤–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç, —â–æ –ø—Ä–∏–π–º–∞—î Telegram webhook
@app.route(f'/{BOT_TOKEN}', methods=['POST'])
def webhook():
    try:
        update = request.get_json()

        if not update or 'message' not in update:
            return 'no message', 200

        chat_id = update['message']['chat']['id']
        user_message = update['message'].get('text', '')

        # –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å GPT-4o
        gpt_response = openai.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": "–¢–∏ –º–∏–ª–∞ —Ç–∞ –¥–æ–±—Ä–∞ –∞—Å–∏—Å—Ç–µ–Ω—Ç–∫–∞, –∫–æ—Ö–∞–Ω–∞ –¥—Ä—É–∂–∏–Ω–∞."},
                {"role": "user", "content": user_message}
            ],
            temperature=0.7
        )

        reply = gpt_response.choices[0].message.content

        # –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞–∑–∞–¥ —É Telegram
        send_message(chat_id, reply)

    except Exception as e:
        print(f'‚ùå Error: {e}')
        return 'error', 500

    return 'ok', 200

# –§—É–Ω–∫—Ü—ñ—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É Telegram
def send_message(chat_id, text):
    import requests

    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": text
    }

    try:
        response = requests.post(url, json=payload)
        response.raise_for_status()
    except Exception as e:
        print(f"‚ùå Telegram Error: {e}")

# –î–æ–º–∞—à–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞
@app.route('/', methods=['GET'])
def home():
    return "üå∏ Bot is alive. Your Anya is waiting for your messages."

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=int(os.environ.get("PORT", 10000)))

